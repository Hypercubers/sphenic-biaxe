[package]
name = "sphenic_biaxe"
description = "Sphenic biaxe puzzle simulator"
version = "1.0.0"
authors = ["Andrew Farkas"]
edition = "2024"
homepage = "https://hypercubing.xyz/sphenic-biaxe/"
repository = "https://github.com/Hypercubers/sphenic-biaxe"
rust-version = "1.85"
keywords = ["cubing", "hypercubing", "rubik", "game", "2d"]
categories = ["games", "mathematics", "simulation"]
license = "MIT OR Apache-2.0"

[package.metadata.docs.rs]
all-features = true
targets = ["x86_64-unknown-linux-gnu", "wasm32-unknown-unknown"]

[lints.rust]
rust_2018_idioms = "warn"

[lints.clippy]
cargo = { level = "warn", priority = -1 }
correctness = { level = "deny", priority = -1 }

assigning_clones = "allow"
comparison_chain = "allow"
doc_markdown = "warn"
if_then_some_else_none = "warn"
manual_let_else = "warn"
match_like_matches_macro = "allow"
semicolon_if_nothing_returned = "warn"
semicolon_inside_block = "warn"
stable_sort_primitive = "warn"
too_many_arguments = "allow"
undocumented_unsafe_blocks = "warn"
uninlined_format_args = "warn"
unwrap_used = "warn"

multiple_crate_versions = { level = "allow", priority = 1 }

[dependencies]
colorous = "1.0"
egui = "0.31"
eframe = { version = "0.31", default-features = false, features = [
    "accesskit",     # Make egui compatible with screen readers. NOTE: adds a lot of dependencies.
    "default_fonts", # Embed the default egui fonts.
    "glow",          # Use the glow rendering backend. Alternative: "wgpu".
    "persistence",   # Enable restoring app state when restarting the app.
    "wayland",       # To support Linux (and CI)
] }
log = "0.4"
rand = { version = "0.9", default-features = false, features = ["std_rng"] }
serde = { version = "1", features = ["derive"] }
web-time = "1.1"

# native:
[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
env_logger = "0.11"

# web:
[target.'cfg(target_arch = "wasm32")'.dependencies]
wasm-bindgen-futures = "0.4"
web-sys = "0.3.70"           # to access the DOM (to hide the loading text)

[profile.release]
opt-level = 2 # fast and small wasm

# Optimize all dependencies even in debug builds:
[profile.dev.package."*"]
opt-level = 2


[patch.crates-io]

# If you want to use the bleeding edge version of egui and eframe:
# egui = { git = "https://github.com/emilk/egui", branch = "master" }
# eframe = { git = "https://github.com/emilk/egui", branch = "master" }

# If you fork https://github.com/emilk/egui you can test with:
# egui = { path = "../egui/crates/egui" }
# eframe = { path = "../egui/crates/eframe" }
